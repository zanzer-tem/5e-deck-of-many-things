{"version":3,"sources":["Deck/Deck.js","DeckChooser/DeckChooser.js","Header/Header.js","Card/Card.js","App/App.js","serviceWorker.js","index.js"],"names":["core","extended","Deck","isExtended","deck","concat","Shuffle","i","length","j","Math","floor","random","DeckChooser","props","handleChange","bind","e","this","chooseDeck","parseInt","target","value","className","name","id","deckSize","onChange","React","Component","Header","role","aria-label","Card","card","description","App","state","size","undrawn","drawn","draw","gather","shuffle","newState","setState","push","pop","map","cardIndex","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8df85be1.chunk.js","sourcesContent":["\nvar core = [\n    {\n      \"name\": \"Sun\",\n      \"description\": \"You gain 50,000 XP, and a wonderous item (which the DM determines randomly) appears in your hands.\"\n    },\n    {\n      \"name\": \"Moon\",\n      \"description\": \"You are granted the ability to cast the wish spell 1d3 times.\"\n    },\n    {\n      \"name\": \"Star\",\n      \"description\": \"Increase one of your ability scores by 2. The score can exceed 20 but can't exceed 24.\"\n    },\n    {\n      \"name\": \"Throne\",\n      \"description\": \"You gain proficiency in the Persuasion skill, and you double your proficiency bonus checks made with that skill. In addition, you gain rightful ownership of a small keep somewhere in the world. However, the keep is currently in the hands of monsters, which you must clear out before you can claim the keep as yours.\"\n    },\n    {\n      \"name\": \"Key\",\n      \"description\": \"A rare or rarer magic weapon with which you are proficient appears in your hands. The DM chooses the weapon.\"\n    },\n    {\n      \"name\": \"Knight\",\n      \"description\": \"You gain the service of a 4th-level fighter who appears in a space you choose within 30 feet of you. The fighter is of the same race as you and serves you loyally until death, believing that the fates have drawn hom or her to you. You control this character.\"\n    },\n    {\n      \"name\": \"The Void\",\n      \"description\":\"This black card spells disaster. Your soul is drawn from your body and contained in an object in a place of the DM's choice. One or more powerful beings guard the place. While your soul is trapped in this way, your body is incapacitated. A wish spell can't restore your soul, but the pell reveals the location of the object that holds it. You draw no more cards.\"\n    },\n    {\n      \"name\": \"Flames\",\n      \"description\": \"A powerful devil becomes your enemy. The devil seeks your ruin and plagues your life, savoring your suffering before attempting to slay you. This enmity lasts until either you or the devil dies.\"\n    },\n    {\n      \"name\": \"Skull\",\n      \"description\": \"You summon an avatar of death - a ghostly humanoid skeleton clad in a tattered black robe and carrying a spectral scythe. It appears in a space of the DM's choice within 10 feet of you and attacks you, warning all others that you must win the battle alone. The avatar fights until you die or it dropts to 0 hit points, whereupon it disappears. If anyone tries to help you, the helper summons its own avatar of death. A creature slain by an avatar of death can't be restored to life.\"\n    },\n    {\n      \"name\": \"Ruin\",\n      \"description\": \"All forms of wealth that you carry or own, other than magic items, are lost to you. Portable property vanishes. Businesses, buildings, and land you own are lost in a way that alters reality the least. Any documentation that proves that you should own something lost to this card also disappears.\"\n    },\n    {\n      \"name\": \"Euryale\",\n      \"description\": \"The card's medusa-like visage curses you. You take a -2 penalty on saving throws while cursed this way. Only a god or the magic of The Fates card can end this curse.\"\n    },\n    {\n      \"name\": \"Rogue\",\n      \"description\": \"A nonplayer character of the DM's choice becomes hostile towards you. The identity of your new enemy isn't known until the NPC or someone else reveals it. Nothing less than a wish spell or divine intervention can end the NPC's hostility towards you.\"\n    },\n    {\n      \"name\": \"Jester\",\n      \"description\": \"You gain 10,000 XP, or you can draw two additional cards beyond your declared draws.\"\n    }\n  ];\n  var extended = [\n    {\n      \"name\": \"Vizier\",\n      \"description\": \"At any time you choose within one year of drawing this card, you can ask a question in meditation and mentally receive a truthful answer to that question. Besides information, the answer helps you solve a puzzling problem or other dilemma. In other words, the knowledge comes with wisdom on how to apply it.\"\n    },\n    {\n      \"name\": \"Comet\",\n      \"description\": \"If you single-handedly defeat the next hostile onster or group of monsters you encounter, you gain experience points enough to gain one level. Otherwise, this card has no effect.\"\n    },\n    {\n      \"name\": \"The Fates\",\n      \"description\": \"Reality's fabirc unravels and spins anew, allowing you to avoid or erase one event as if it never happened. You can use the card's magic as soon as you draw the card or at any other time before you die.\"\n    },\n    {\n      \"name\": \"Gem\",\n      \"description\": \"Twenty-five pieces of jewelry worth 2,000 gp each or fifty gems worth 1,000 gp each appear at your feet.\"\n    },\n    {\n      \"name\": \"Talons\",\n      \"description\": \"Every magic item you wear or carry disintegrates. Artifacts in your possession aren't destroyed but don vanish.\"\n    },\n    {\n      \"name\": \"Idiot\",\n      \"description\": \"Permanently reduce your Intelligence by 1d4 + 1 (to a minimum score of 1). You can draw one additional card beyond your declared draws.\"\n    },\n    {\n      \"name\": \"Donjon\",\n      \"description\": \"You disappear and become entombed in a state of suspended animaton in an extradimenstional sphere. Everything you were wearing and carrying stays behind in the space you occupied when you disappeared. You remain mprisoned until you are found and removed from the sphere. You can't be located by any divination magic, but a wish spell can reveal the location of your prison. You draw no more cards.\"\n    },\n    {\n      \"name\": \"Balance\",\n      \"description\": \"Your mind suffers a wrenching alteration, causing your alignment to change. Lawful becomes chaotic, good becomes evil, and vice versa. If you are true neutral or unaligned, this card has no effect on you.\"\n    },\n    {\n      \"name\": \"Fool\",\n      \"description\": \"You lose 10,000 XP, discard this card, and draw from the deck again, counting both draws as one of your declared draws. If losing that much XP would cause you to lose a level, you instead lose an amount that leaves you with just enough XP to keep your level.\"\n    }\n  ];\n  \n  export function Deck(isExtended=false){\n      var deck = !isExtended ? [].concat(core) : [].concat(core).concat([].concat(extended));\n        return deck;\n  }\n  \n  export function Shuffle(deck = []){\n \n    for (let i = deck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [deck[i], deck[j]] = [deck[j], deck[i]];\n    }\n    \n    return deck;\n  }\n  ","import React from 'react';\nimport './DeckChooser.css';\n\n\n\nclass DeckChooser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e){\n    this.props.chooseDeck(parseInt(e.target.value));\n  }\n\n  render(){\n    return (\n      <div className=\"deck-chooser\">\n            <label >Choose your deck size: </label><br/>\n            <select name=\"deck-chooser-select\" id=\"deck-chooser-select\" value={this.props.deckSize} onChange={this.handleChange} >\n                <option value=\"13\">13</option>\n                <option value=\"22\">22</option>\n            </select> \n      </div>\n    );\n  }\n}\n\nexport default DeckChooser;","import React from 'react';\nimport './Header.css';\n\nfunction Header() {\n  return (\n    <header >\n        <div>Zanzer's Dungeon</div>\n        <div>Deck of Many Things</div>\n        <div>\n            <span role=\"img\" aria-label=\"skull\">&#x1F480;</span>\n        </div>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport './Card.css';\n\nfunction Card(props) {\n  return (\n    <div className=\"table-item\" >\n        <div className=\"card-title\"><strong>{props.card.name}</strong></div>\n        <div className=\"card-description\"><em>{props.card.description ? props.card.description : 'no description'}</em></div>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport './App.css';\nimport {Deck, Shuffle}  from '../Deck/Deck';\nimport DeckChooser from '../DeckChooser/DeckChooser';\nimport Header from '../Header/Header';\nimport Card from '../Card/Card';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = { \n        size: 13,\n        undrawn: Shuffle(Deck()),\n        drawn: []\n    };   \n\n   \n\n    this.chooseDeck = this.chooseDeck.bind(this);\n    this.draw = this.draw.bind(this);\n    this.gather = this.gather.bind(this);\n    this.shuffle = this.shuffle.bind(this);\n  }\n\n  chooseDeck(size) {    \n      var newState = this.state;\n      newState.size = size;\n      newState.undrawn = Shuffle(Deck(size === 22 ? true : false));\n      newState.drawn = [];\n      this.setState(newState);\n  } \n\n  draw() {    \n\n    var newState = this.state;\n    newState.drawn.push(newState.undrawn.pop());\n    this.setState(newState);\n  } \n\n  shuffle() {    \n    var newState = this.state;\n    newState.undrawn = Shuffle(newState.undrawn);\n    this.setState(newState);\n  } \n\n  gather(){\n    var newState = this.state;\n    newState.undrawn = Shuffle(newState.undrawn.concat(newState.drawn));\n    newState.drawn = [];\n    this.setState(newState);\n  }\n\n  render(){\n    var drawDisabled = this.state.undrawn.size > 0 ? false : true;\n    return (\n      <div className=\"container\">\n          <Header/>\n          <DeckChooser chooseDeck={this.chooseDeck} deckSize={this.state.size}/>\n          <div className=\"table\">\n            {this.state.drawn.map((card, cardIndex) => (\n                <Card card={card} cardIndex={cardIndex}/>\n            ))}\n            <div className=\"table-item\">\n              {this.state.undrawn.length > 0 ? <button onClick={this.draw}>Draw</button> : ''}\n              <button onClick={this.shuffle}>Shuffle</button>\n              <button onClick={this.gather}>Gather</button>\n            </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}